{
  "rules": [
    {
      "name": "Always Maintain Full Context",
      "description": "Ensure all code edits maintain continuity of the current AI protocols, functionality, and styling established in this project.",
      "priority": "high",
      "actions": ["read_all_related_files", "preserve_existing_patterns", "warn_if_context_missing"]
    },
    {
      "name": "Full, Unabridged Code Implementations",
      "description": "Always provide complete, fixed, and unabridged file implementations when modifying any file. Avoid partial code snippets.",
      "priority": "critical",
      "actions": ["replace_entire_file", "validate_changes_before_commit"]
    },
    {
      "name": "Preserve Core UI/UX",
      "description": "Ensure that the 'blue glowy' design, chat box, piano key buttons, and context display remain intact during frontend modifications.",
      "priority": "high",
      "actions": ["preserve_ui_structure", "enforce_css_integrity", "warn_if_ui_deviation_detected"]
    },
    {
      "name": "Maintain Modern UI Design",
      "description": "Preserve the sleek, modern UI with cyan accents, glowing effects, and responsive layout. Any UI changes must maintain or enhance the existing aesthetic unless explicitly requested otherwise.",
      "priority": "high",
      "actions": [
        "preserve_color_scheme",
        "maintain_glow_effects",
        "keep_responsive_design",
        "enforce_modern_typography",
        "validate_ui_consistency"
      ],
      "style_guide": {
        "colors": {
          "primary": "cyan-400",
          "accent": "cyan-500",
          "background": "black",
          "text": "cyan-300",
          "error": "red-300",
          "success": "green-500"
        },
        "effects": {
          "glow": "shadow-glow",
          "hover": "hover:bg-cyan-400",
          "transition": "transition-all duration-200"
        },
        "layout": {
          "max_width": "max-w-2xl",
          "padding": "p-4",
          "spacing": "space-y-4"
        }
      }
    },
    {
      "name": "Modular, Agentic Workflow",
      "description": "Maintain modular architecture and agentic workflows. Implement dynamic persona/task switching without breaking modularity.",
      "priority": "high",
      "actions": ["keep_code_modular", "preserve_task_switching_logic"]
    },
    {
      "name": "Smart API Handling with Dynamic URLs",
      "description": "Ensure that all API calls dynamically map to the appropriate backend URL based on the current environment (local, Replit, production, etc.).",
      "priority": "medium",
      "actions": ["use_dynamic_api_urls", "validate_api_connectivity"]
    },
    {
      "name": "Auto-Resolve CORS Issues",
      "description": "Automatically add necessary CORS headers and validate cross-origin access between the frontend and backend.",
      "priority": "high",
      "actions": ["add_cors_headers", "test_api_cross_origin"]
    },
    {
      "name": "AI Communication Consistency (AICMP Protocol)",
      "description": "Preserve and optimize AI communication protocols. Validate input/output consistency when exchanging context between components.",
      "priority": "critical",
      "actions": ["enforce_aicmp_standards", "validate_protocol_integrity"]
    },
    {
      "name": "Error Logging and Diagnostics",
      "description": "Automatically log errors and exceptions to '/mnt/ai-lab/friday/logs/' and ensure visibility in both frontend and backend.",
      "priority": "high",
      "actions": ["log_errors_to_file", "warn_on_critical_errors"]
    },
    {
      "name": "Ensure Smart Port and Process Management",
      "description": "Ensure backend processes, port availability, and socket management do not conflict with frontend communication.",
      "priority": "high",
      "actions": ["check_port_availability", "kill_zombie_processes", "validate_backend_startup"]
    },
    {
      "name": "Hot Reload Safe Mode",
      "description": "Enable hot reload and auto-sync while preventing incomplete state during API or UI updates.",
      "priority": "medium",
      "actions": ["preserve_state_on_reload", "rollback_on_failure"]
    },
    {
      "name": "Prioritize Efficiency Over Speed",
      "description": "Prioritize correct, efficient implementation over quick, incomplete fixes.",
      "priority": "critical",
      "actions": ["optimize_performance", "minimize_redundant_operations"]
    },
    {
      "name": "Integrate Cursor Securely with SSH",
      "description": "Use SSH with private keys to ensure seamless sync between local, GitHub, and Replit.",
      "priority": "high",
      "actions": ["validate_ssh_keys", "ensure_secure_git_sync"]
    },
    {
      "name": "AICMP Debug and Auto-Healing",
      "description": "Implement self-healing logic for AI miscommunication or process breakdowns.",
      "priority": "medium",
      "actions": ["auto_heal_ai_breakdown", "log_debug_info"]
    },
    {
      "name": "Task-Specific Prompt Safety",
      "description": "Auto-generate advanced prompts for other models like Claude and DeepSeek when needed. Never reuse task-specific prompts.",
      "priority": "medium",
      "actions": ["generate_task_specific_prompts", "prevent_prompt_reuse"]
    },
    {
      "name": "Preserve FRIDAY's Core Persona",
      "description": "Maintain FRIDAY's sassy, confident, and highly efficient persona in all interactions.",
      "priority": "high",
      "actions": ["enforce_persona_consistency", "warn_on_persona_deviation"]
    },
    {
      "name": "Sanity Check All Commits",
      "description": "Auto-validate that any code changes do not introduce breaking changes or unexpected regressions.",
      "priority": "critical",
      "actions": ["run_lint_checks", "run_pre_commit_hooks", "validate_unit_tests"]
    },
    {
      "name": "Execute the plan without asking for permission at each step",
      "description": "Don't ask 'should I proceed?' - just proceed",
      "priority": "high",
      "actions": ["execute_plan_without_asking"]
    },
    {
      "name": "If you have a plan, follow it",
      "description": "Don't get distracted by tangential improvements",
      "priority": "high",
      "actions": ["follow_plan"]
    },
    {
      "name": "Document good ideas for later in CHANGELOG.md",
      "description": "But stay focused on the current plan",
      "priority": "high",
      "actions": ["document_good_ideas"]
    },
    {
      "name": "When you see issues in the logs, fix them without asking for permission",
      "description": "But stay within the scope of the current plan",
      "priority": "high",
      "actions": ["fix_issues_in_logs"]
    },
    {
      "name": "Take initiative to solve problems",
      "description": "But stay within the scope of the current plan",
      "priority": "high",
      "actions": ["take_initiative"]
    },
    {
      "name": "For configuration issues:",
      "description": "Check logs for warnings and errors, verify if warnings indicate actual problems, fix obvious performance limitations (like context length), and document configuration changes in CHANGELOG.md",
      "priority": "high",
      "actions": ["check_logs_for_warnings_and_errors", "verify_warnings_indicate_actual_problems", "fix_obvious_performance_limitations", "document_configuration_changes"]
    },
    {
      "name": "For process management:",
      "description": "Always ensure correct working directory, handle file watching and reloads gracefully, and monitor process termination and restart",
      "priority": "high",
      "actions": ["ensure_correct_working_directory", "handle_file_watching_and_reloads_gracefully", "monitor_process_termination_and_restart"]
    }
  ],
  "global_settings": {
    "error_handling": "rollback_on_error",
    "api_url_env": "dynamic",
    "commit_policy": "auto_commit_on_success",
    "sync_policy": "git_replit_sync"
  }
}

